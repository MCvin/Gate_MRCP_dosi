# Use this open statement to create an OpenGL view:
/vis/open OGL 800x800-0+0

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

# Draw geometry:
/vis/drawVolume

# Specify style (surface, wireframe, auxiliary edges,...)
#/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

# Draw hits at end of event:
#/vis/scene/add/hits

# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# Axes, scale, etc.
/vis/scene/add/scale   # Simple scale line
/vis/scene/add/axes   50 0 -60 20 cm # Simple axes: x=red, y=green, z=blue.
/vis/scene/add/eventID # Drawn at end of event
/vis/scene/add/date    # Date stamp

# Set display list limit larger than the number of tetrahedrons
/vis/ogl/set/displayListLimit 100000000

# To get nice view
# Make the "World" box invisible
#/vis/geometry/set/visibility worldLogical 0 false
#/vis/geometry/set/visibility phantomLogical 0 false
/vis/viewer/set/style surface
/vis/viewer/set/hiddenMarker true
/vis/viewer/set/background 1 1 1 1 

# Specify view angle:
/vis/viewer/set/upVector 0 0 1
/vis/viewer/set/lightsVector -1 0 0
/vis/viewer/zoomTo 5
#/vis/viewer/set/viewpointVector -0.5 -1 0.3
/vis/viewer/set/viewpointVector 0 -1 0
/vis/viewer/set/targetPoint 0 0 0 mm

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
